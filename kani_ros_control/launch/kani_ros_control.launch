<launch>
  <!--Argument in this launch file-->
  <arg name="rqt_steering" default="false"/>
  <arg name="rviz" default="false"/>
  <arg name="model" default="$(find kani_description)/robots/kani.urdf.xacro"/>

  <!-- Controller config for simulation -->
  <arg name="sim_controllers_config" default="$(find kani_ros_control)/config/kani_ros_control_sim.yaml"/>
  
  <arg name="rvizconfig" default="$(find kani_ros_control)/rviz/kani.rviz" />

  <!-- Convert an xacro and put on parameter server-->
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
  
  <!--Load controller parameter for simulation-->
  <rosparam command="load" file="$(arg sim_controllers_config)"/>

  <!--Spawn Controller-->
  <node name="four_wheel_controller_spawner" pkg="controller_manager" type="spawner"
    args="kani_joint_state_publisher
          kani_steering_controller"/>


  <!--Main control launch file-->
  <include file="$(find kani_ros_control)/launch/dynamixel_controllers.launch" />

  <!--Publish robot state-->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
  </node>

  <!--Gui steering console (Optional)-->
  <group if="$(arg rqt_steering)">
    <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
      <param name="default_topic" value="kani/cmd_vel"/>
      <!--param name="default_vx_max" value="0.3"/-->
      <!--param name="default_vx_min" value="-0.25"/-->
    </node>
  </group>

  <!--Gui rviz interface (Optional)-->
  <group if="$(arg rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" />
  </group>

</launch>
